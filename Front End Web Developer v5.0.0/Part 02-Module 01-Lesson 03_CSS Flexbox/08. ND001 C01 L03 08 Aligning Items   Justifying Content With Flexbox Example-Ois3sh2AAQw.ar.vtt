WEBVTT
Kind: captions
Language: ar

00:00:00.000 --> 00:00:05.370
من الأمور التي أريد اطلاعكم عليها فيما نتحدث عن
 محاذاة العناصر

00:00:05.370 --> 00:00:11.655
وضبط المحتوى هي كيفية كتابة التعليمات البرمجية.

00:00:11.654 --> 00:00:16.439
من المستحيل حفظ كافة التعليمات البرمجية

00:00:16.440 --> 00:00:20.520
ولكن، بعد قضاء 10 آلاف ساعة في استخدامها، لا بد
 أن تحفظ العديد منها عن ظهر قلب

00:00:20.519 --> 00:00:24.000
ومع الوقت ستعتاد على كتابتها بسرعة.

00:00:24.000 --> 00:00:28.349
مع ذلك، ونظرًا لوجود العديد من الخصائص، نجد أن
 المطورون المحترفون يحتاجون

00:00:28.349 --> 00:00:32.359
للاطلاع على التعليمات البرمجية لمعرفة المزيد عنها.

00:00:32.359 --> 00:00:34.759
ليلة أمس، أثناء تحضيري للدرس

00:00:34.759 --> 00:00:37.269
اطلعت على التعليمات البرمجية، وقررت

00:00:37.270 --> 00:00:41.150
أنه بدلًا من التظاهر بالذكاء ومعرفة كل شيء دومًا،

00:00:41.149 --> 00:00:44.060
أن استعرض معكم جزءًا من العملية

00:00:44.060 --> 00:00:47.750
ونطلع معًا على التعليمات البرمجية أثناء البرمجة.

00:00:47.750 --> 00:00:49.670
لنرَ كيف يسير الأمر.

00:00:49.670 --> 00:00:53.100
لدينا هنا صفحة ضبط المحتوى.

00:00:53.100 --> 00:00:58.295
يمكننا رؤية الخيارات المختلفة لضبط المحتوى،

00:00:58.295 --> 00:01:01.594
وهي البداية، توسيط، تباعد،

00:01:01.594 --> 00:01:04.414
مسافات محيطة ومسافات متساوية.

00:01:04.415 --> 00:01:10.520
من هنا يمكننا معرفة أنني أستخدم توسيط لضبط المحتوى

00:01:10.519 --> 00:01:13.670
لنجرب خيارات أخرى.

00:01:13.670 --> 00:01:17.230
ماذا يحدث إذا عدلنا ضبط المحتوى إلى البداية؟

00:01:17.230 --> 00:01:18.965
بووم. أرأيتم هذا؟

00:01:18.965 --> 00:01:24.665
انتقلت كافة المربعات إلى نقطة البداية

00:01:24.665 --> 00:01:28.210
لنعيدها إلى مكانها ها هي تعود إلى الوسط مرة أخرى.

00:01:28.209 --> 00:01:29.884
لنلق نظرة على خيار آخر.

00:01:29.885 --> 00:01:38.320
ماذا سيحدث عند اختيار مسافات محيطة؟ أرأيتم هذا؟

00:01:38.319 --> 00:01:43.294
توزعت بانتظام مع مسافات تفصل بينها وتحيط بها

00:01:43.295 --> 00:01:46.355
لنكرر الأمر هكذا تعود إلى الوسط.

00:01:46.355 --> 00:01:48.109
وهكذا مع مسافات محيطة.

00:01:48.109 --> 00:01:49.745
لنجرب خيارًا آخر

00:01:49.745 --> 00:01:53.500
هذه مسافات متساوية

00:01:54.409 --> 00:01:58.965
رائع. ربما لاحظتم أن خصائص الضبط تُستخدم

00:01:58.965 --> 00:02:02.975
فقط لضبط المحتوى على المحور الأفقي.

00:02:02.974 --> 00:02:06.719
لنجرب إعدادات مختلفة لمحاذاة العناصر

00:02:06.719 --> 00:02:13.500
لفعل ذلك، سننشئ عددًا من المربعات الإضافية.

00:02:13.500 --> 00:02:18.455
حسنًا. لنلق نظرة على محاذاة بعض العناصر

00:02:18.455 --> 00:02:23.490
أضفنا هنا المربعين أربعة وخمسة

00:02:23.490 --> 00:02:24.810
وأصبح لدينا مربع واحد

00:02:24.810 --> 00:02:26.939
اثنان، ثلاثة، أربعة وخمسة.

00:02:26.939 --> 00:02:30.469
نلاحظ أن محاذاة العناصر قد ضُبطت على توسيط

00:02:30.469 --> 00:02:32.180
وإذا اطلعنا إلى التعليمات البرمجية

00:02:32.180 --> 00:02:37.205
سنجد بين الخصائص تمدد والبداية والنهاية.

00:02:37.205 --> 00:02:40.625
لنلق نظرة على تمدد.

00:02:40.625 --> 00:02:44.969
سنغير الاتجاه المرن إلى عمود.

00:02:47.000 --> 00:02:50.210
نلاحظ أن محاذاة العناصر على تمدد

00:02:50.210 --> 00:02:52.640
أدت إلى تمددها

00:02:52.639 --> 00:02:56.179
على امتداد عرض الحاوية التي توجد فيها.

00:02:56.180 --> 00:02:58.760
وهذا إحدى الأمور المدهشة في فليكس.

00:02:58.759 --> 00:03:04.030
نلاحظ أنه لم يعد يظهر هنا عرض أو ارتفاع المربع

00:03:04.030 --> 00:03:06.034
ويظهر عوضًا عن ذلك الحدود.

00:03:06.034 --> 00:03:10.759
عند تغيير طريقة مواءمة العناصر داخل الحاوية،

00:03:10.759 --> 00:03:13.310
نلاحظ تغيّر شكلها.

00:03:13.310 --> 00:03:15.634
لنجرب النهاية.

00:03:15.634 --> 00:03:18.560
قمنا بمحاذاة العناصر عند النهاية.

00:03:18.560 --> 00:03:24.629
ماذا لو غيرنا المحاذاة عند البداية؟ لم يتغير شيء.

00:03:24.629 --> 00:03:30.159
ماذا لو ضبطنا محاذاة العناصر عند النهاية وفي صف؟

00:03:30.919 --> 00:03:37.259
لنجرب توسيط وتمدد.

00:03:37.259 --> 00:03:39.599
لنستبعد ضبط المحتوى.

00:03:39.599 --> 00:03:42.710
نلاحظ أنه لم يتغير شيء.

00:03:42.710 --> 00:03:45.740
ماذا لو غيرنا اتجاه المحاور؟

00:03:45.740 --> 00:03:48.310
يمكننا أن نرى تغييرًا الآن.

00:03:48.310 --> 00:03:52.219
نستنتج أن تأثير محاذاة العناصر وضبط المحتوى

00:03:52.219 --> 00:03:55.925
يختلف بناء على الاتجاه المرن.

00:03:55.925 --> 00:04:03.765
لدينا هنا واحدة من أكثر طرق الضبط المريحة باعتقادي

00:04:03.764 --> 00:04:05.449
فمن الأمور التي أحب أن أراها

00:04:05.449 --> 00:04:09.530
توزع المربعات بانتظام على أكبر قدر ممكن من المساحة

00:04:09.530 --> 00:04:13.145
في هذا المثال، ضبطنا المربعات من واحد إلى خمسة

00:04:13.145 --> 00:04:16.970
بحيث تتوزع بمسافات متساوية فيما بينها داخل الحاوية
 الرئيسية.

00:04:16.970 --> 00:04:19.560
وبهذا حتى لو حذفنا،

00:04:19.560 --> 00:04:23.240
المربع الخامس مثلًا،

00:04:23.240 --> 00:04:27.514
ستتوزع المربعات الأربعة ثانية لتشغل المساحة.

00:04:27.514 --> 00:04:30.529
لنقل أننا لا نريد المربع الثالث أيضًا.

00:04:30.529 --> 00:04:31.939
هل تلاحظون ماذا جرى؟

00:04:31.939 --> 00:04:36.399
يوفر «فليكس بوكس» العديد من الخيارات المذهلة،

00:04:36.399 --> 00:04:39.579
بإزالة المربع اثنان، بقي المربع واحد وأربعة

00:04:40.069 --> 00:04:42.675
لا يزال في المنتصف تمامًا،

00:04:42.675 --> 00:04:43.980
دون الحاجة لبرمجة إضافية،

00:04:43.980 --> 00:04:45.569
بقي لدينا المربع واحد.

00:04:45.569 --> 00:04:47.509
العديد من الأمور التي شاهدناها،

00:04:47.509 --> 00:04:51.810
بما في ذلك طريقة حذف وإضافة العناصر المختلفة،

00:04:51.810 --> 00:04:57.050
يمكن عملها بلغة البرمجة التي تسمى جافا سكريبت.

00:04:57.050 --> 00:04:59.050
في الواقع، إذا بحثتم عبر الإنترنت،

00:04:59.050 --> 00:05:01.343
ستجدون أن العديد من الأشخاص يرون

00:05:01.343 --> 00:05:04.360
أنها الطريقة الأفضل للعمل لأن جافا سكريبت

00:05:04.360 --> 00:05:10.180
لغة أكثر تعقيدًا وتقدم لك خيارات وإمكانات حيوية
 لا تتوفر في CSS.

00:05:10.180 --> 00:05:13.860
ولكن CSS لغة أكثر بساطة يمكن أن تتيح لك

00:05:13.860 --> 00:05:16.009
القيام بعدد من الأمور المماثلة.

00:05:16.009 --> 00:05:18.305
وفيما تتعلم هاتين الأداتين،

00:05:18.305 --> 00:05:21.639
يمكنك الموازنة بينهما وتقرر متى وكيف تستخدم

00:05:21.639 --> 00:05:26.789
CSS أو جافا سكريبت لترتيب العناصر في نموذج كائن
 المستند DOM.

