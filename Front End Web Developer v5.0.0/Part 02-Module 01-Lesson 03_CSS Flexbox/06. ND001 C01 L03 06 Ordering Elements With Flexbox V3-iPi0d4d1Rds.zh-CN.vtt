WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.955
这里我们有一个弹性盒子容器 它里面有 3 个子元素

00:00:05.955 --> 00:00:09.855
现在我们来试着用不同的方式改变它们的显示顺序

00:00:09.855 --> 00:00:12.255
当前顺序是 box 1 &gt; box 2 &gt; box 3

00:00:12.255 --> 00:00:14.339
当前顺序是 box 1 &gt; box 2 &gt; box 3

00:00:14.339 --> 00:00:19.460
最简单的改变顺序的方式是直接改变 HTML 代码

00:00:19.460 --> 00:00:24.769
我们可以把 box 2 向上移动一下 就变成了：

00:00:24.769 --> 00:00:26.469
box 2 &gt; box 1 &gt; box 3

00:00:26.469 --> 00:00:29.085
在浏览器中也是一样 box 2 &gt; box 1 &gt; box 3

00:00:29.085 --> 00:00:30.855
在浏览器中也是一样 box 2 &gt; box 1 &gt; box 3

00:00:30.855 --> 00:00:36.605
移动 HTML 代码是一种很简单、很直接的方式

00:00:36.604 --> 00:00:39.959
让我们先把代码还原 回到原始顺序

00:00:39.960 --> 00:00:41.880
让我们先把代码还原 回到原始顺序

00:00:41.880 --> 00:00:44.840
这次我们来使用 order 属性

00:00:44.840 --> 00:00:48.875
order 属性的工作原理是比较属性值

00:00:48.875 --> 00:00:53.149
如果我设置 box 1 和 box 2 的 order 属性为 2

00:00:53.149 --> 00:00:58.704
设置 box 3 的 order 属性为 1

00:00:58.704 --> 00:01:02.284
那么 box 3 会显示在 box 1 和 box 2 的前面

00:01:02.284 --> 00:01:04.939
而 box 1 和 box 2 因为有着相同的 order 属性

00:01:04.939 --> 00:01:09.829
所以它们会根据在 HTML 中的顺序来决定 代码里靠前的元素就会显示在前面

00:01:09.829 --> 00:01:12.155
我们来看看效果

00:01:12.155 --> 00:01:17.150
可以看到 box 3 是第 1 个显示的元素 因为它的 order 属性是 1

00:01:17.150 --> 00:01:22.219
比 box 1 和 box 2 中的 order 属性 2 要小 （1小于2）

00:01:22.219 --> 00:01:24.715
我们也可以设置为 3、7 等等数字

00:01:24.715 --> 00:01:28.250
总之 会根据你设置的值的大小来显示顺序

00:01:28.250 --> 00:01:32.944
值最小的元素会显示在最前面

00:01:32.944 --> 00:01:38.934
现在已知两种改变元素顺序的方式：通过直接改变 HTML 代码

00:01:38.935 --> 00:01:42.620
或者使用 order 属性 而第三种方式是

00:01:42.620 --> 00:01:46.550
在父容器上使用 flex-direction 属性

00:01:46.549 --> 00:01:50.509
当 flex-direction 设置为 row 时 这里是 box 3 &gt; box 1 &gt; box 2 

00:01:50.510 --> 00:01:53.185
当 flex-direction 设置为 row 时 这里是 box 3 &gt; box 1 &gt; box 2 

00:01:53.185 --> 00:01:57.825
如果设置为 row-reverse

00:01:57.825 --> 00:01:59.885
顺序则会变成 box 2 &gt; box 1 &gt; box 3

00:01:59.885 --> 00:02:02.030
顺序则会变成 box 2 &gt; box 1 &gt; box 3

00:02:02.030 --> 00:02:06.079
这些就是三种调整元素顺序的方式

00:02:06.079 --> 00:02:09.229
你可以选择使用 flex-direction 来依次排列

00:02:09.229 --> 00:02:14.179
或使用 row-reverse 来翻转元素的显示顺序

00:02:14.180 --> 00:02:17.990
也可以用专属的 order 属性来设置每个子元素

00:02:17.990 --> 00:02:22.159
在容器中的显示顺序 就像这里我们设置的 2 2 1 一样

00:02:22.159 --> 00:02:25.849
因此这个元素就会显示在第一位 也就是 box 3 &gt; box 2 &gt; box 1 

00:02:25.849 --> 00:02:27.310
因此这个元素就会显示在第一位 也就是 box 3 &gt; box 2 &gt; box 1 

00:02:27.310 --> 00:02:31.340
最后 你也可以通过改变 HTML 代码

00:02:31.340 --> 00:02:36.229
来手动调整他们的顺序

00:02:36.229 --> 00:02:38.405
想想 这里会发生什么？

00:02:38.405 --> 00:02:40.909
将 div 3 设置 order 为 1

00:02:40.909 --> 00:02:42.620
div 2 的 order 设置为 2

00:02:42.620 --> 00:02:45.050
然后给 div 1 设置为 3

00:02:45.050 --> 00:02:49.175
最终的顺序会是怎样呢 ?

00:02:49.175 --> 00:02:54.060
答案是 3 &gt; 2 &gt; 1 猜对了吗 ?

00:02:54.060 --> 00:02:57.189
没事 以后你会慢慢熟悉的

