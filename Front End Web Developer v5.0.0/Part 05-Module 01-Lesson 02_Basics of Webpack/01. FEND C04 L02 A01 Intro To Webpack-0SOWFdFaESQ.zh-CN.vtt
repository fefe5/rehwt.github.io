WEBVTT
Kind: captions
Language: zh-CN

00:00:00.260 --> 00:00:03.419
现在我们开始学习 Webpack

00:00:03.419 --> 00:00:06.679
首先 想象一个网页

00:00:06.679 --> 00:00:09.990
一个你可能构建过的普通网页

00:00:09.990 --> 00:00:17.609
假设是这样的 这就是一个普普通通的网页

00:00:17.609 --> 00:00:19.530
其中有一些动画

00:00:19.530 --> 00:00:22.020
某些动画可能来自

00:00:22.019 --> 00:00:26.129
一个第三方 JavaScript 动画库

00:00:26.129 --> 00:00:27.329
有很多这样的库

00:00:27.329 --> 00:00:29.879
继续处理类似这样的事情

00:00:29.879 --> 00:00:31.379
我们显示一些提示

00:00:31.379 --> 00:00:35.219
它们可能来自 Bootstrap 使用 Bootstrap 的提示或模型

00:00:35.219 --> 00:00:39.289
或者类似的需要 Bootstrap JavaScript 库的组件

00:00:39.289 --> 00:00:40.789
还有其他的交互

00:00:40.789 --> 00:00:42.079
可能是一些定制化的交互

00:00:42.079 --> 00:00:45.215
也可能来自于其他的库

00:00:45.215 --> 00:00:48.830
可能还有表单或计算器

00:00:48.829 --> 00:00:52.640
或者其他需要编写针对网页定制化的 JavaScript 组件

00:00:52.640 --> 00:00:53.929
除此之外

00:00:53.929 --> 00:00:56.269
为了让网站更酷

00:00:56.270 --> 00:00:58.430
我们还加入了一些视差效果

00:00:58.429 --> 00:01:02.810
即当你向下浏览页面时

00:01:02.810 --> 00:01:08.329
页面的元素会以不同的速率滚动

00:01:08.329 --> 00:01:09.724
你可能还有更多的设计

00:01:09.724 --> 00:01:11.375
但是无论你要做什么

00:01:11.375 --> 00:01:18.689
这真的很酷 同时 我们需要管理的库正在迅速增加

00:01:18.689 --> 00:01:22.789
这里 我列出一些文件的清单 你可能

00:01:22.790 --> 00:01:27.290
已经使用它们搭建了像这样的一个非常简单的网页

00:01:27.290 --> 00:01:33.240
有 Bootstrap 一个非常通用的库 很多网页都在使用

00:01:33.239 --> 00:01:35.069
但是除 Bootstrap 之外

00:01:35.069 --> 00:01:40.009
我们还用到了一些 Bootstrap 的 JavaScript 例如模型和提示

00:01:40.010 --> 00:01:43.325
然后 还用到了这个动画库

00:01:43.325 --> 00:01:48.890
动画库可能还依赖了另一个库

00:01:48.890 --> 00:01:54.034
可能需要 jQuery 或 React 或若干其他库

00:01:54.034 --> 00:01:56.989
此外 还有视差库

00:01:56.989 --> 00:02:02.000
视差库也可能有依赖项 你会发现

00:02:02.000 --> 00:02:07.129
我们开始积累越来越多需要管理的库

00:02:07.129 --> 00:02:09.875
它们必须按照特定的顺序加载

00:02:09.875 --> 00:02:14.120
所以管理工作很快就会变得非常困难

00:02:14.120 --> 00:02:17.000
希望在第一节课

00:02:17.000 --> 00:02:18.319
你就意识到了这个问题

00:02:18.319 --> 00:02:19.699
你看了一些专业的网站 以及其中包含的资源数量

00:02:19.699 --> 00:02:24.064
你看了一些专业的网站 以及其中包含的资源数量

00:02:24.064 --> 00:02:28.740
因此 当谈到 Webpack 实际的作用时

00:02:28.740 --> 00:02:31.775
这里有很多的 JavaScript 文件

00:02:31.775 --> 00:02:33.830
假设这些就是

00:02:33.830 --> 00:02:38.290
上一页幻灯片中由你编写的所有 Javascript

00:02:38.289 --> 00:02:40.969
还有你编写的所有样式

00:02:40.969 --> 00:02:45.955
这些样式可以是 CSS 或 Sass 亦或其他任何形式

00:02:45.955 --> 00:02:49.985
在本课程的后面 我们会讨论那些其他的格式

00:02:49.985 --> 00:02:54.305
但在这里 我可以编写任意数量的 JavaScript 文件

00:02:54.305 --> 00:02:56.810
但在这里 我可以编写任意数量的 JavaScript 文件

00:02:56.810 --> 00:02:59.754
可以用我喜欢的任意格式编写样式

00:02:59.754 --> 00:03:03.574
然后 Webpack 会通过加载器和插件来运行这些文件

00:03:03.574 --> 00:03:06.649
然后 Webpack 会通过加载器和插件来运行这些文件

00:03:06.650 --> 00:03:10.625
稍后我们会介绍这里涉及到的处理过程

00:03:10.625 --> 00:03:14.689
然后 Webpack 将所有文件内容输出到一个 bundle.js 文件中

00:03:14.689 --> 00:03:20.900
这是一个很大的文件 把我们需要的一切都组织起来 棒极了

00:03:20.900 --> 00:03:25.530
Webpack 所做的基本上就是这样

00:03:25.530 --> 00:03:29.129
当我思考什么时候需要 Webpack

00:03:29.129 --> 00:03:33.125
什么时候不需要 Webpack 以及它能带来什么好处时

00:03:33.125 --> 00:03:36.650
我会想到这样的场景 有时去杂货店时

00:03:36.650 --> 00:03:39.844
我认为自己只需要买一两件东西

00:03:39.844 --> 00:03:45.349
所以没有推购物车 直接空手进去拿东西

00:03:45.349 --> 00:03:48.180
但是在逛了一圈后 我突然间发现

00:03:48.180 --> 00:03:50.075
自己开始越拿越多

00:03:50.074 --> 00:03:52.294
可能开始拿组合促销商品

00:03:52.294 --> 00:03:57.619
最终 我走向收银台 尴尬地搬着这些东西递给收银员

00:03:57.620 --> 00:04:00.469
我必须决定要一个购物袋还是

00:04:00.469 --> 00:04:04.539
尝试尴尬地把这些东西搬到车上

00:04:04.539 --> 00:04:08.310
希望最后装袋机把所有东西

00:04:08.310 --> 00:04:11.620
井井有条地放进袋子 这个示例中

00:04:11.620 --> 00:04:13.655
资源文件就像我们购买的东西

00:04:13.655 --> 00:04:16.459
你可能真正需要的只有一两个资源

00:04:16.459 --> 00:04:19.399
这样 你可能不需要构建工具

00:04:19.399 --> 00:04:22.549
来将所有东西放进井井有条的 "包裹" 中

00:04:22.550 --> 00:04:27.670
但是客户从来都不会想要你简单做个网站

00:04:27.670 --> 00:04:30.905
随着网站的不断发展和成熟

00:04:30.904 --> 00:04:34.189
你会一直添加新的东西进去

00:04:34.189 --> 00:04:37.795
没有哪个网站会在很长一段时间里保持不变

00:04:37.795 --> 00:04:41.235
所以当网站需要改变的时候

00:04:41.235 --> 00:04:44.090
你会需要一种好的方式来管理网站资源

00:04:44.089 --> 00:04:48.049
不仅只想着构建应用的那一刻

00:04:48.050 --> 00:04:49.639
也要为未来考虑

00:04:49.639 --> 00:04:53.724
因此 即使你认为只打算使用一两个资源

00:04:53.725 --> 00:04:57.939
我仍然倾向于添加一个构建工具

00:04:57.939 --> 00:05:02.230
添加 Webpack 以便未来有一个好的方式管理网站资源

00:05:02.230 --> 00:05:04.920
如果添加 Webpack

00:05:04.920 --> 00:05:09.470
最终 我们能得到一些非常简单的打包好的文件

00:05:09.470 --> 00:05:11.830
简单来说

00:05:11.829 --> 00:05:15.169
Webpack 允许我们在开发中以自己想要

00:05:15.170 --> 00:05:18.769
使用的方式使用资源

00:05:18.769 --> 00:05:21.590
但是之后只需添加一个文件到

00:05:21.589 --> 00:05:26.159
网站的 head 元素中 这让整个过程变得极为简单。最新课程跟课件还有一对一辅导请加wx：udacity6

