WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:03.509
使 webpack 便于使用的最受欢迎的工具之一

00:00:03.509 --> 00:00:07.320
是 webpack-dev-server

00:00:07.320 --> 00:00:10.470
我认为这是 webpack 流行的主要原因之一

00:00:10.470 --> 00:00:13.035
该工具使 webpack 开发起来非常快速

00:00:13.035 --> 00:00:16.125
该工具使 webpack 开发起来非常快速

00:00:16.125 --> 00:00:22.515
webpack-dev-server 允许创建只针对开发模式的服务器

00:00:22.515 --> 00:00:29.085
使你可以立即运行文件并即时更新

00:00:29.085 --> 00:00:35.265
这也是让 Create React App 拥有如此出色的热重载特性的原因

00:00:35.265 --> 00:00:40.935
首先 了解一下 webpack-dev-server 能做什么

00:00:40.935 --> 00:00:42.270
开箱即用

00:00:42.270 --> 00:00:46.295
webpack 提供了监视 (watch) 特定文件的能力

00:00:46.295 --> 00:00:50.450
这里的 watch 是说 webpack 要监视

00:00:50.450 --> 00:00:54.995
整个依赖关系树 来查看你何时对这些文件进行了更改

00:00:54.994 --> 00:00:59.144
如果你在文本编辑器中保存了文件

00:00:59.145 --> 00:01:03.545
webpack 可以侦测出该文件刚刚发生了更改

00:01:03.545 --> 00:01:12.099
你可以直接在命令中添加 --watch 来运行

00:01:12.099 --> 00:01:15.569
当我们将 --watch 添加到命令参数中时

00:01:15.569 --> 00:01:18.479
你会看到运行命令时

00:01:18.480 --> 00:01:20.415
会有一些不同的行为

00:01:20.415 --> 00:01:23.490
webpack 不会停止运行

00:01:23.489 --> 00:01:27.379
可以在这里看到它在等待新文件

00:01:27.379 --> 00:01:29.060
或等待什么事情发生

00:01:29.060 --> 00:01:33.560
实际上 它正在监视我们所有的文件 看是否有改动

00:01:33.560 --> 00:01:36.620
如果我们回到 index.js 文件

00:01:36.620 --> 00:01:41.825
简单添加了另一个 alert 看看接下来会发生什么

00:01:41.825 --> 00:01:46.920
这里 可以看到 webpack 注意到有事情发生

00:01:46.920 --> 00:01:50.825
重新运行了对所有文件的编译

00:01:50.825 --> 00:01:55.969
确实很酷 但这仍然没有预期的

00:01:55.969 --> 00:02:00.650
那样人性化 不能重启你的浏览器

00:02:00.650 --> 00:02:06.155
难点在于 如果我在开发该文件 设置了本地主机

00:02:06.155 --> 00:02:12.860
即使在此处保存文件 并且 webpack 知道要重新构建分发文件夹

00:02:12.860 --> 00:02:16.070
仍然要刷新浏览器才能看到更改

00:02:16.069 --> 00:02:20.905
所以 如果不想刷新浏览器就看到更改

00:02:20.905 --> 00:02:24.240
webpack 提供了 webpack-dev-server

00:02:24.240 --> 00:02:29.860
它支持很受欢迎的热重载功能

00:02:29.860 --> 00:02:32.395
要安装 webpack-dev-server

00:02:32.395 --> 00:02:35.255
我得先停止服务器

00:02:35.254 --> 00:02:40.719
再安装 webpack-dev-server

00:02:41.060 --> 00:02:43.724
加载完成后

00:02:43.724 --> 00:02:51.944
只需要将 webpack-dev-server 添加到 package.json 文件的命令中

00:02:51.944 --> 00:02:55.574
编辑 build-dev 脚本

00:02:55.574 --> 00:03:00.254
现在要将其替换为这个脚本

00:03:00.254 --> 00:03:05.150
这里的 webpack-dev-server 告诉 webpack

00:03:05.150 --> 00:03:10.430
我们将使用开发服务器来运行 webpack 开发配置文件

00:03:10.430 --> 00:03:15.025
每次运行时我们都要自动打开浏览器

00:03:15.025 --> 00:03:18.300
所以现在 如果运行 npm build-dev 脚本

00:03:18.300 --> 00:03:23.160
可以看到它打开了一个新的浏览器窗口来运行应用

00:03:24.830 --> 00:03:32.070
如你所见 有多个来自 index.js 文件的 alert

00:03:32.069 --> 00:03:35.209
你会发现 我们的样式一个都没有出现

00:03:35.210 --> 00:03:38.210
但这实际上是与预期相符的 因为我们还没有

00:03:38.210 --> 00:03:41.540
设置通过 webpack 导入任何样式

00:03:41.539 --> 00:03:43.729
这里唯一出现的是

00:03:43.729 --> 00:03:48.125
index.html 文件和我们导入的 JavaScript 文件

00:03:48.125 --> 00:03:51.990
所以是符合预期的

