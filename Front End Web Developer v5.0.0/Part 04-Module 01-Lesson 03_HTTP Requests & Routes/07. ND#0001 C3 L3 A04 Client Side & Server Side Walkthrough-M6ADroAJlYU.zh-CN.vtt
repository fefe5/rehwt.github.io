WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:05.519
让我们看一个客户端和服务器端协同工作的例子

00:00:05.519 --> 00:00:09.599
我使用 node L3Server.js

00:00:09.599 --> 00:00:17.070
启动服务器

00:00:17.070 --> 00:00:19.125
看 运行起来了

00:00:19.125 --> 00:00:21.089
在服务器端代码中

00:00:21.089 --> 00:00:25.199
调用 post 设置路由 该方法需要两个参数

00:00:25.199 --> 00:00:28.500
第一个参数是 URL

00:00:28.500 --> 00:00:31.649
这里使用 addMovie 因为我们想提供一个

00:00:31.649 --> 00:00:36.149
用来添加影片的 API 并且在 1-5 之间为其打分

00:00:36.149 --> 00:00:39.979
在 addMovie 函数中 通过

00:00:39.979 --> 00:00:43.699
req.body 获取请求数据

00:00:43.700 --> 00:00:47.540
我们从 POST 请求中获取数据并把它保存在数组中

00:00:47.539 --> 00:00:52.494
这样就可以在应用的其他地方拿到它

00:00:52.494 --> 00:00:55.239
让我们再看一下客户端

00:00:55.240 --> 00:00:57.875
这些代码现在看起来应该很熟了

00:00:57.875 --> 00:01:00.770
我们指定请求类型为 POST

00:01:00.770 --> 00:01:04.505
使用 JSON 传输数据

00:01:04.504 --> 00:01:09.189
然后调用 postData 函数

00:01:09.189 --> 00:01:12.515
为其传入路径 addMovie

00:01:12.515 --> 00:01:15.920
和用来测试的数据

00:01:15.920 --> 00:01:19.659
看看是否可以向应用发送 POST 请求

00:01:19.659 --> 00:01:25.155
让我们用影片 黑客帝国 并且满分 5 分 来测试

00:01:25.155 --> 00:01:27.739
这是我最喜欢的一部电影

00:01:27.739 --> 00:01:30.515
让我们看看服务器端是否能拿到这一数据

00:01:30.515 --> 00:01:36.090
刷新浏览器

00:01:36.090 --> 00:01:40.570
我们看到了 黑客帝国 和 5 分的评分

00:01:40.569 --> 00:01:45.589
由于服务器端和客户端都是我们实现的

00:01:45.590 --> 00:01:48.099
观察服务器终端

00:01:48.099 --> 00:01:54.520
我们得到了同样的数据

00:01:55.040 --> 00:01:58.265
在使用 push 存储数据后 我们使用这一行

00:01:58.265 --> 00:02:00.950
console.log(data)

00:02:00.950 --> 00:02:08.180
将它打印出来 得到了 5 分的 黑客帝国

00:02:08.180 --> 00:02:11.390
让我们再举一例

00:02:11.389 --> 00:02:16.239
假设我们要添加另一部电影

00:02:16.240 --> 00:02:20.159
再次调用 postData 函数

00:02:20.159 --> 00:02:27.219
使用同样的 URL 添加影片

00:02:27.219 --> 00:02:31.819
然后传入影片信息

00:02:31.819 --> 00:02:36.209
创建 movie 对象

00:02:37.110 --> 00:02:41.210
还有什么好片子呢？

00:02:41.689 --> 00:02:48.590
Pitch Perfect

00:02:48.590 --> 00:02:53.830
我个人倾向给打 5 分

00:02:53.830 --> 00:02:55.760
但是总不能所有影片都打 5 分吧

00:02:55.759 --> 00:02:59.375
给个 4.5 吧

00:02:59.375 --> 00:03:04.050
保存代码

00:03:04.050 --> 00:03:05.805
回到应用

00:03:05.805 --> 00:03:07.800
刷新

00:03:07.800 --> 00:03:11.030
我们看到了 Pitch Perfect 4.5 分

00:03:11.030 --> 00:03:16.504
这是客户端代码

00:03:16.504 --> 00:03:19.460
如果回到服务器端 观察终端

00:03:19.460 --> 00:03:23.960
会发现打印出 黑客帝国 5 分

00:03:23.960 --> 00:03:29.010
Pitch Perfect 4.5 分

00:03:29.009 --> 00:03:32.269
我们观察服务器端终端

00:03:32.270 --> 00:03:35.225
会发现所有数据都被保存下来

00:03:35.224 --> 00:03:38.734
并且在终端打印出来

00:03:38.735 --> 00:03:46.190
我们可以看到 黑客帝国 5 分 Pitch Perfect 4.5 分

00:03:46.189 --> 00:03:49.579
这就是客户端和服务器端

00:03:49.580 --> 00:03:55.320
是如何一起工作的。最新课程跟课件还有一对一辅导请加wx：udacity6

