WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:06.030
本节视频将讨论如何在 webpack 上设置 Sass

00:00:06.030 --> 00:00:10.379
以及一些关于加载器的新内容

00:00:10.380 --> 00:00:13.515
可以看到 我已经根据课程内容指导

00:00:13.515 --> 00:00:18.164
完成了添加加载器的第一步

00:00:18.164 --> 00:00:21.494
现在 这里有一段之前没见过的语法 我们来单独讲一下

00:00:21.495 --> 00:00:25.929
现在 这里有一段之前没见过的语法 我们来单独讲一下

00:00:27.410 --> 00:00:31.125
你可以在 rules 数组中看到这些内容

00:00:31.125 --> 00:00:36.990
这里有一个 test 用例还有一个 use 用例

00:00:36.990 --> 00:00:41.039
后面是多个加载器组成的列表

00:00:41.039 --> 00:00:44.269
这与之前只使用一个 babel-loader

00:00:44.270 --> 00:00:47.435
处理所有 JS 文件有很大的不同

00:00:47.435 --> 00:00:51.490
这里这些加载器有什么用?

00:00:51.490 --> 00:00:54.530
这引出了 webpack 加载器一个非常酷的特性 — 支持链式传递

00:00:54.530 --> 00:00:57.814
这引出了 webpack 加载器一个非常酷的特性 — 支持链式传递

00:00:57.814 --> 00:01:05.530
可以利用一个加载器的输出 比如说用一个加载器运行 CSS 文件

00:01:05.530 --> 00:01:07.370
或 Sass 文件

00:01:07.370 --> 00:01:11.000
你可以获取加载器生成的输出

00:01:11.000 --> 00:01:14.480
这个输出不仅能输出到 dist 文件夹

00:01:14.480 --> 00:01:18.200
还可以将其传递给另一个加载器处理

00:01:18.200 --> 00:01:22.939
然后这个加载器又可以将输出传递给下一个加载器 依此类推

00:01:22.939 --> 00:01:25.984
直到得到分发文件夹最终需要的格式

00:01:25.984 --> 00:01:29.584
直到得到分发文件夹最终需要的格式

00:01:29.584 --> 00:01:33.559
这个处理过程可能有点复杂

00:01:33.560 --> 00:01:38.129
我们来详细看看其中的细节

00:01:38.620 --> 00:01:42.760
在正常的加载器流中

00:01:42.760 --> 00:01:44.984
你使用 webpack 构建

00:01:44.984 --> 00:01:49.289
运行构建开发或构建生产

00:01:49.290 --> 00:01:50.875
这样操作时

00:01:50.875 --> 00:01:55.685
你的文件可能与加载器 test 用例匹配或不匹配

00:01:55.685 --> 00:02:01.010
如果 webpack 发现文件与加载器 test 用例匹配

00:02:01.010 --> 00:02:05.875
那么该文件的内容将通过该加载器运行

00:02:05.875 --> 00:02:07.618
这个加载器可以是 babel-loader

00:02:07.618 --> 00:02:08.879
也可以是一个文件加载器

00:02:08.879 --> 00:02:12.454
可以是任何已有的 webpack 加载器

00:02:12.455 --> 00:02:16.350
但是无论加载器的功能是什么

00:02:16.349 --> 00:02:18.889
最终都会将原始内容通过某种方式

00:02:18.889 --> 00:02:22.239
转换为新的内容供你使用

00:02:22.240 --> 00:02:26.420
然后 加载器会将内容添加到

00:02:26.419 --> 00:02:30.289
main.js 或任何打包后的文件

00:02:30.289 --> 00:02:34.834
并且所有这些代码最终都将输出到分发文件夹中

00:02:34.835 --> 00:02:38.460
但是现在的流程稍有不同

00:02:38.460 --> 00:02:42.439
这是简化后的流程图

00:02:42.439 --> 00:02:47.639
如果专门查看这一部分的流程

00:02:47.639 --> 00:02:53.224
会看到第三步中要运行多个加载器

00:02:53.224 --> 00:02:59.090
这里发生的情况是 文件与加载器 test 用例进行正则匹配

00:02:59.090 --> 00:03:05.030
然后将内容交给第一个加载器处理

00:03:05.030 --> 00:03:10.840
一个加载器处理完成 即已经将内容转换成某种格式后

00:03:10.840 --> 00:03:16.594
它会将输出提供给第 2 个加载器 构成这样一条装配线

00:03:16.594 --> 00:03:23.150
直到最后一个加载器将内容转换成我们需要的格式

00:03:23.150 --> 00:03:26.765
现在还有一个比较绕的地方

00:03:26.764 --> 00:03:28.609
不太好理解

00:03:28.610 --> 00:03:31.535
不过只要掌握了窍门 那就很简单了

00:03:31.534 --> 00:03:35.810
链式加载器是一个非常强大的工具

00:03:35.810 --> 00:03:38.935
但是你必须知道如何使用其语法

00:03:38.935 --> 00:03:46.685
不太好理解的地方是 链式加载器是从右到左运行的 你没听错

00:03:46.685 --> 00:03:49.909
这样的话 Sass 加载器应该是

00:03:49.909 --> 00:03:53.990
第一个要运行的加载器 而 CSS 加载器是第二个

00:03:53.990 --> 00:03:56.540
而样式加载器将是最后一个

00:03:56.539 --> 00:03:59.780
从 CSS 加载器中获取所有内容

00:03:59.780 --> 00:04:02.104
对我来说这是有点违反直觉的

00:04:02.104 --> 00:04:05.209
我记得自己第一次学习设置链式加载器时

00:04:05.210 --> 00:04:08.750
迷惑不解地确认了好几次

00:04:08.750 --> 00:04:12.185
但是一旦绕过这个弯 你就能记住这个窍门

00:04:12.185 --> 00:04:13.925
没那么复杂

00:04:13.925 --> 00:04:17.180
当你具备以任何想要的方式组合多个加载器的能力时

00:04:17.180 --> 00:04:21.329
就可以完成一些很棒的任务

00:04:21.329 --> 00:04:24.979
这些加载器也没有什么特别的

00:04:24.980 --> 00:04:29.285
它们可以单独运行 也可以链式运行

00:04:29.285 --> 00:04:33.725
没有哪个加载器在这方面特殊

00:04:33.725 --> 00:04:37.220
还有一件重要的事情需要记住

00:04:37.220 --> 00:04:40.475
使这些加载器链式运行的是这里的 use 关键字

00:04:40.475 --> 00:04:45.240
use 关键字允许我们输入加载器数组

00:04:45.240 --> 00:04:47.564
将数组中的加载器进行链式运行

00:04:47.564 --> 00:04:49.480
说了这么多

00:04:49.480 --> 00:04:52.775
我们尝试看看实际的运行效果

00:04:52.774 --> 00:04:56.319
在 webpack 开发配置中加入这个设置

00:04:56.319 --> 00:04:58.435
当我运行构建脚本时

00:04:58.435 --> 00:05:04.535
它应该将所有样式放入到 main.js 文件中

00:05:04.535 --> 00:05:08.230
来尝试运行一下

00:05:08.230 --> 00:05:11.504
当我们看到应用启动时

00:05:11.504 --> 00:05:14.019
所有的样式都应该出现

00:05:14.019 --> 00:05:17.659
但是 可以看到事实并非如此

00:05:17.660 --> 00:05:19.610
这是个问题

00:05:19.610 --> 00:05:23.270
我正确设置了所有加载器

00:05:23.269 --> 00:05:28.089
我也有一个 test 用例并且所有加载器都已安装

00:05:28.089 --> 00:05:31.894
但不明原因地 样式都没出现

00:05:31.894 --> 00:05:37.279
事实上 如果看一下 main.js 文件

00:05:37.279 --> 00:05:42.239
那里也没有任何样式

00:05:42.240 --> 00:05:47.405
这是一个问题 也许你能找到原因所在

00:05:47.404 --> 00:05:50.029
浏览一下代码 看看能否找出样式没有出现的原因

00:05:50.029 --> 00:05:53.609
浏览一下代码 看看能否找出样式没有出现的原因

