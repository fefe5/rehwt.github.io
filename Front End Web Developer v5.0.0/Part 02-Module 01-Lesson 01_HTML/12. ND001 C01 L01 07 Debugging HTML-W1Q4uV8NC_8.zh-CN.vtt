WEBVTT
Kind: captions
Language: zh-CN

00:00:01.370 --> 00:00:06.209
调试 HTML

00:00:06.209 --> 00:00:11.070
应该是你学习如何编程最好的方式之一

00:00:11.070 --> 00:00:15.030
作为一个开发者 你会花费很多时间来调试你的代码

00:00:15.029 --> 00:00:18.750
查找出现的错误原因以及如何优化你的代码

00:00:18.750 --> 00:00:21.359
调试可能会让你感觉很麻烦

00:00:21.359 --> 00:00:23.309
但它确实是编程的基础之一

00:00:23.309 --> 00:00:26.399
而且可以让你学到很多

00:00:26.399 --> 00:00:32.280
调试 HTML 有一些特殊 因为没有可以查看反馈的命令

00:00:32.280 --> 00:00:35.120
不像 JavaScript 会有一些内置的错误信息

00:00:35.119 --> 00:00:38.509
然后你可以使用 console.log 函数打印出来帮助调试

00:00:38.509 --> 00:00:42.469
调试 HTML 通常需要你仔细阅读你的代码

00:00:42.469 --> 00:00:47.089
一行一行地查找可能出现错误的地方

00:00:47.090 --> 00:00:48.950
在我们进一步之前

00:00:48.950 --> 00:00:52.280
我们先弄清楚调试到底是什么意思

00:00:52.280 --> 00:00:57.620
调试通常意味着我们的程序没有按照预期的方式运行

00:00:57.619 --> 00:01:00.934
因为某些错误

00:01:00.935 --> 00:01:02.390
出现了一些问题

00:01:02.390 --> 00:01:08.000
所以 调试就是浏览你的代码 试着找到出现错误的地方

00:01:08.000 --> 00:01:14.614
然后以某种方式解决它们 这就是调试的过程

00:01:14.614 --> 00:01:19.589
那么 哪些是常见的 HTML 错误呢？

00:01:19.590 --> 00:01:25.100
我所遇见最常见的错误是开始标签和结束标签不匹配

00:01:25.099 --> 00:01:27.515
这种情况是很危险的

00:01:27.515 --> 00:01:30.980
因为浏览器仍然可以渲染它们 并且没有任何提示

00:01:30.980 --> 00:01:35.105
所以你会看到和你预期不一样的情况 但是你不知道发生了什么

00:01:35.105 --> 00:01:38.240
在这里 你可以看到

00:01:38.239 --> 00:01:44.219
我有一个开始的 h1 标签 但是却有一个结束的 h2 标签

00:01:44.219 --> 00:01:47.719
这是很容易出现的错误

00:01:47.719 --> 00:01:54.039
也非常重要 你需要仔细检查它们来确保它是 h1 或者 h2

00:01:54.040 --> 00:01:56.505
我希望它是 h1

00:01:56.504 --> 00:01:58.784
这也是一个例子

00:01:58.784 --> 00:02:00.944
一个缺失的关闭标签

00:02:00.944 --> 00:02:06.529
如果我取消注释 这会是一个很糟糕的错误

00:02:06.530 --> 00:02:11.360
它会混淆我接下来的代码 因为它们就紧跟在后面

00:02:11.360 --> 00:02:13.060
如果没有结束标签

00:02:13.060 --> 00:02:14.330
它会继续解析

00:02:14.330 --> 00:02:16.400
最后的结果可能是

00:02:16.400 --> 00:02:19.219
h2 既包含了这一部分

00:02:19.219 --> 00:02:22.384
也包含了接下来的所有部分

00:02:22.384 --> 00:02:25.699
所以 寻找结束标签可能是调试中非常非常

00:02:25.699 --> 00:02:28.369
重要的一部分

00:02:28.370 --> 00:02:35.129
第三种很常见的情况则是引号错误

00:02:35.129 --> 00:02:38.689
因为我们在编写时会使用字符串

00:02:38.689 --> 00:02:42.680
字符串文本被放置在一堆引号之间

00:02:42.680 --> 00:02:47.990
如果没有结束引号 就意味着你的字符串会一直延续下去

00:02:47.990 --> 00:02:55.430
这才是我们想要的结果 现在字符串被包裹在一对引号中

00:02:55.430 --> 00:03:03.340
一切都恢复了正常

00:03:03.340 --> 00:03:06.629
好了 现在的问题是

00:03:06.629 --> 00:03:10.174
你认为你自己能够调试 HTML 中的代码吗？

00:03:10.175 --> 00:03:12.990
我相信你可以

