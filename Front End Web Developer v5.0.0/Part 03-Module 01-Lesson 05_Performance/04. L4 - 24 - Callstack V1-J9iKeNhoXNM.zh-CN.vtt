WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:01.679
我们来看看代码

00:00:01.679 --> 00:00:05.325
这里有个 addParagraph 函数 它将创建一个新的段落

00:00:05.325 --> 00:00:08.745
向其添加文本并追加到 body 元素上

00:00:08.744 --> 00:00:10.259
该函数的第 4 行

00:00:10.259 --> 00:00:13.605
调用了 appendNewMessage 函数

00:00:13.605 --> 00:00:15.900
appendNewMessage 会执行相同的操作

00:00:15.900 --> 00:00:20.745
它创建一个段落 向其添加文本并将其追加到 body 元素上

00:00:20.745 --> 00:00:25.690
第 12 行调用在第 1 行声明的 addParagraph 函数

00:00:25.690 --> 00:00:30.234
我们打开调用栈以跟踪函数调用

00:00:30.234 --> 00:00:33.420
现在运行文件

00:00:33.420 --> 00:00:35.910
调用此文件会向堆栈中添加一个指示符

00:00:35.909 --> 00:00:39.719
叫做栈帧 (frame) 告诉我们正在运行的是什么

00:00:39.719 --> 00:00:42.344
我用文本 main 进行标记

00:00:42.344 --> 00:00:46.984
但有些 Javascript 引擎使用单词 anonymous global 或类似单词

00:00:46.984 --> 00:00:48.899
我们从第一行开始

00:00:48.899 --> 00:00:51.765
这是函数声明 继续

00:00:51.765 --> 00:00:55.619
另一个函数声明 再次继续

00:00:55.619 --> 00:00:57.404
最后是函数调用

00:00:57.405 --> 00:00:59.929
从这里开始变得有趣起来

00:00:59.929 --> 00:01:06.090
调用该函数会将其添加到调用栈中 执行操作移到该函数中

00:01:06.090 --> 00:01:09.180
然后在该函数中继续 直到第 4 行

00:01:09.180 --> 00:01:11.475
调用了新的函数

00:01:11.474 --> 00:01:16.259
它被添加到了调用栈中 执行操作移到这里

00:01:16.260 --> 00:01:19.535
然后在该函数中往下移到

00:01:19.534 --> 00:01:21.979
当它抵达该函数的底部时

00:01:21.980 --> 00:01:24.770
执行完毕 该函数从调用栈中删除了

00:01:24.769 --> 00:01:29.015
回到离开的位置并继续

00:01:29.015 --> 00:01:32.954
同样 当它抵达该函数的底部时

00:01:32.954 --> 00:01:36.310
执行完毕 该函数从调用栈中被删除

00:01:36.310 --> 00:01:38.715
然后从离开的位置继续

00:01:38.715 --> 00:01:42.730
抵达文件的末尾并结束

