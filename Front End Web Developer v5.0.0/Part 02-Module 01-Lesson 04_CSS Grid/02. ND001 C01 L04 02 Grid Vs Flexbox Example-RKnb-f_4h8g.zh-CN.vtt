WEBVTT
Kind: captions
Language: zh-CN

00:00:01.129 --> 00:00:06.104
让我们快速看一看如何将 grid 和 flexbox 组合在一起使用

00:00:06.105 --> 00:00:08.429
在开始 我会先向你展示一个现成的例子

00:00:08.429 --> 00:00:10.829
快速过一遍它

00:00:10.829 --> 00:00:12.780
然后在这节课程中

00:00:12.779 --> 00:00:15.195
你会一步一步的学习如何搭建它

00:00:15.195 --> 00:00:16.620
这里你可以看到

00:00:16.620 --> 00:00:20.130
我将一个容器设置成了 grid 布局

00:00:20.129 --> 00:00:24.105
第一件我们需要做的事情是设置 display 属性为 grid

00:00:24.105 --> 00:00:26.990
待会儿我们会看一看其中的行和列

00:00:26.989 --> 00:00:29.914
在这里我们设置了 grid-template-areas 属性

00:00:29.914 --> 00:00:34.504
然后每个 box 也设置了 display 属性为 flex

00:00:34.505 --> 00:00:39.630
这是我们的 HTML 代码：container 容器内部有 3 个 box 元素

00:00:39.630 --> 00:00:45.050
container 容器的 display 属性为 grid 而每个 box 的 display 属性则是 flex

00:00:45.049 --> 00:00:48.709
这就是为什么这些文字会居中显示

00:00:48.710 --> 00:00:51.710
如果我们去掉 flex 的话

00:00:51.710 --> 00:00:55.174
所有的内容会重新回到左上角的位置

00:00:55.174 --> 00:01:00.489
使用 flex 的话 我们可以轻易的居中它们

00:01:00.490 --> 00:01:03.984
现在 我要向你展示一个小技能

00:01:03.984 --> 00:01:06.469
一个非常有趣的技能

00:01:06.469 --> 00:01:08.929
在我们的 grid 容器中

00:01:08.930 --> 00:01:10.760
内容的分布看起来不太好看

00:01:10.760 --> 00:01:14.515
所有的内容都是靠左显示

00:01:14.515 --> 00:01:20.525
grid 和 flex 一样 我们可以通过 justify-content 居中内容

00:01:20.525 --> 00:01:22.940
在这个例子中 我们设置为 center

00:01:22.939 --> 00:01:27.109
然后保存一下看看会发生什么

00:01:27.109 --> 00:01:30.515
好了 现在我们有了一个漂亮的网格布局

00:01:30.515 --> 00:01:33.590
两行和两列

00:01:33.590 --> 00:01:36.094
全部都居中显示

00:01:36.094 --> 00:01:42.090
这就是一个你可以将 CSS grid 和 flexbox 结合起来使用的例子

