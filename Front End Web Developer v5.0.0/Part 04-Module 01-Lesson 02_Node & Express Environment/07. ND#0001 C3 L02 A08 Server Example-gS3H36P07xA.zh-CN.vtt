WEBVTT
Kind: captions
Language: zh-CN

00:00:07.009 --> 00:00:12.300
这是创建一个服务器需要的代码

00:00:12.300 --> 00:00:16.620
这里是我们刚才编写的代码

00:00:16.620 --> 00:00:19.859
和你在浏览器中常见的日志信息不同

00:00:19.859 --> 00:00:24.494
编写服务器端代码时

00:00:24.495 --> 00:00:26.580
日志信息

00:00:26.579 --> 00:00:30.969
打印在终端

00:00:34.100 --> 00:00:38.189
在终端执行 node 文件名

00:00:38.189 --> 00:00:42.070
运行代码

00:00:47.210 --> 00:00:51.880
啊哦 刚好借此机会学习一下怎么调试

00:00:51.880 --> 00:00:55.840
看看我哪里做错了

00:00:55.840 --> 00:00:58.225
在错误的目录执行命令

00:00:58.225 --> 00:01:01.300
是常见的错误之一 你要好好检查一下当前所处目录

00:01:01.299 --> 00:01:08.319
我现在在 dsb_go 目录 是我想要执行命令的上一级目录

00:01:08.319 --> 00:01:13.524
而代码在 UdacitySampleProject 目录

00:01:13.525 --> 00:01:15.760
问题清楚了 我让 Node 在错误的路径下查找文件

00:01:15.760 --> 00:01:18.280
当然不存在了

00:01:18.280 --> 00:01:20.504
让我们进入正确的目录

00:01:20.504 --> 00:01:23.299
UdacitySampleProject

00:01:23.299 --> 00:01:27.819
然后运行代码

00:01:33.469 --> 00:01:38.109
终于得到了预期的反馈 服务器跑起来了

00:01:38.109 --> 00:01:41.885
运行在 localhost:8000

00:01:41.885 --> 00:01:43.514
复习一下

00:01:43.513 --> 00:01:46.644
使用 listen 方法创建 Express 服务器

00:01:46.644 --> 00:01:48.969
该方法有两个参数

00:01:48.969 --> 00:01:52.284
一个服务器上的端口和一个待执行的回调函数

00:01:52.284 --> 00:01:57.590
让我们快速浏览一遍代码 弄清楚究竟发生了什么

00:01:57.620 --> 00:02:01.810
第二行引入 Express

00:02:01.810 --> 00:02:05.665
之前已经在命令行安装好了

00:02:05.665 --> 00:02:10.469
然后创建一个实例

00:02:10.469 --> 00:02:12.914
接着是需要的依赖

00:02:12.914 --> 00:02:14.650
就是之前提到的中间件 body-parser

00:02:14.650 --> 00:02:17.800
用它解析数据

00:02:17.800 --> 00:02:20.650
这里使用 use 方法

00:02:20.650 --> 00:02:24.909
告诉 body-parser 处理的数据格式

00:02:24.909 --> 00:02:28.579
多数情况下都是 JSON

00:02:29.000 --> 00:02:32.724
和 body-parser 类似

00:02:32.724 --> 00:02:37.539
引入另外一个在命令行中安装的包 cors

00:02:37.539 --> 00:02:41.019
cors 能让浏览器和服务器免受安全限制

00:02:41.020 --> 00:02:45.765
自由通信

00:02:45.764 --> 00:02:50.614
在第 18 行又用到了 use 方法

00:02:50.615 --> 00:02:55.925
这次将应用指向了一个可以访问的目录

00:02:55.925 --> 00:02:58.000
稍后我们会详细介绍

00:02:58.000 --> 00:03:01.250
这么简单的一样代码

00:03:01.250 --> 00:03:04.039
就可以把服务器端代码和客户端代码

00:03:04.039 --> 00:03:08.039
关联起来 让客户端访问 demo 目录

00:03:08.900 --> 00:03:13.819
最后来到可爱的服务器 设置端口

00:03:13.819 --> 00:03:15.275
调用 listen 方法

00:03:15.275 --> 00:03:17.599
传入回调函数

00:03:17.599 --> 00:03:20.460
我们有了一个 Web 服务器

