WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:04.620
One of my favorite things about working with promises in the Fetch API,

00:00:04.620 --> 00:00:08.490
it's the ability to easily chain promises on top of each other,

00:00:08.490 --> 00:00:10.245
and create functions that depend on

00:00:10.244 --> 00:00:14.910
outside data without halting or causing errors in your code.

00:00:14.910 --> 00:00:20.954
So let's think for a second about our animal Web API app example.

00:00:20.954 --> 00:00:24.644
Imagine we also wanted to add a feature to our app where

00:00:24.644 --> 00:00:28.394
users can enter the favorite thing about their favorite animal.

00:00:28.394 --> 00:00:30.074
Then we want to be able to save

00:00:30.074 --> 00:00:33.600
all the information which is the info we get back from the API,

00:00:33.600 --> 00:00:34.844
the name of the animal,

00:00:34.844 --> 00:00:36.134
and a fact about it,

00:00:36.134 --> 00:00:40.460
and then we have from the user their favorite thing about that animal,

00:00:40.460 --> 00:00:45.380
and we want to take all that and save it into our app so that we can use it later.

00:00:45.380 --> 00:00:48.785
So we would need two fetch calls.

00:00:48.784 --> 00:00:53.484
We would first need a GET request to the animal web API,

00:00:53.484 --> 00:00:56.240
and then we would need to make a POST request to

00:00:56.240 --> 00:01:00.295
store all the data we received locally in our app.

00:01:00.295 --> 00:01:03.664
A sync promises are perfect for this kind of thing.

00:01:03.664 --> 00:01:06.829
Because the Fetch API is built on top of promises,

00:01:06.829 --> 00:01:12.814
we can use the syntax then to chain actions, with fetch calls.

00:01:12.814 --> 00:01:17.939
Soon, we'll take a look at what that is in action.

