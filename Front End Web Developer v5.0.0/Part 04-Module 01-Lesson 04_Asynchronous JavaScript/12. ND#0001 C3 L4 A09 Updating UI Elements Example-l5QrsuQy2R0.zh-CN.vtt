WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:02.850
现在让我们把学过的东西串起来

00:00:02.850 --> 00:00:07.230
这个例子展示了如何创建应用访问 Animal

00:00:07.230 --> 00:00:11.565
并且动态更新用户界面

00:00:11.564 --> 00:00:14.699
首先让我们看看它是否可以正常工作

00:00:14.699 --> 00:00:15.945
如果一切正常

00:00:15.945 --> 00:00:19.304
我们就可以开始看代码了

00:00:19.304 --> 00:00:27.824
这次我要输入 Lions are some of

00:00:27.824 --> 00:00:37.929
the most thoughtful writing partners in the world

00:00:38.990 --> 00:00:44.570
页面上出现了 lion

00:00:44.570 --> 00:00:46.850
lions are fun

00:00:46.850 --> 00:00:48.695
以及我输入的有关狮子的趣闻

00:00:48.695 --> 00:00:53.134
Lions are some of the most thoughtful writing partners in the world

00:00:53.134 --> 00:00:57.289
在这里我们依然将数据打印出来 但更重要的是

00:00:57.289 --> 00:01:02.089
我们使用用户输入和从

00:01:02.090 --> 00:01:07.445
Web API 获取的数据动态更新了页面

00:01:07.444 --> 00:01:11.359
当然 除了将文字显示在这里 你还可以增加一些创意

00:01:11.359 --> 00:01:18.269
你可以使用 CSS 美化页面 或者再增加点什么

00:01:46.819 --> 00:01:57.179
输入 lions are so endearing to young dogs on the run

00:01:57.180 --> 00:02:00.455
现在页面显示 Animal Is lion

00:02:00.454 --> 00:02:03.204
这样看起来更好一点

00:02:03.204 --> 00:02:05.605
这完全取决于你 一旦你加入元素

00:02:05.605 --> 00:02:09.219
就可以动态更新它们

00:02:09.219 --> 00:02:15.419
让我们暂时忘掉 HTML 回头看看 JavaScript 代码

00:02:18.250 --> 00:02:23.069
上面这些代码应该都很熟悉了吧

00:02:23.259 --> 00:02:25.685
这是事件监听器

00:02:25.685 --> 00:02:27.759
这是回调函数

00:02:27.759 --> 00:02:32.164
这里选择了 fav 元素

00:02:32.164 --> 00:02:35.935
我们先访问 API 获取数据

00:02:35.935 --> 00:02:41.539
然后再 POST 更新数据

00:02:43.340 --> 00:02:46.485
这是奇迹发生的地方

00:02:46.485 --> 00:02:51.650
因为是异步编程 我们可以等待数据返回后

00:02:51.650 --> 00:02:56.305
发起 POST 请求 然后再更新界面

00:02:56.305 --> 00:02:58.375
再来看看 updateUI 函数

00:02:58.375 --> 00:03:05.960
这依然是一个异步函数 它向路由 all 发起请求

00:03:05.960 --> 00:03:10.879
服务器端的路由 all 非常简单

00:03:10.879 --> 00:03:15.900
调用 app.get("/all") 并且传入一个回调函数提供数据

00:03:15.900 --> 00:03:20.110
然后将 animalData 返回

00:03:20.110 --> 00:03:25.715
animalData 也是 POST 路由的数据端点

00:03:25.715 --> 00:03:27.245
在 POST 路由中

00:03:27.245 --> 00:03:32.360
调用 animalData.push 保存信息

00:03:32.360 --> 00:03:36.625
在需要时就可以从 animalData

00:03:36.625 --> 00:03:38.729
中获取数据

00:03:38.729 --> 00:03:42.449
拿到数据之后

00:03:42.449 --> 00:03:46.459
我们将它转换为 JSON

00:03:46.460 --> 00:03:52.790
然后用它更新

00:03:52.789 --> 00:03:59.870
index.html 中定义的三个元素

00:03:59.870 --> 00:04:02.200
一个 ID 为 animalName 的 div

00:04:02.199 --> 00:04:04.155
一个 ID 为 animalFact 的 div

00:04:04.155 --> 00:04:07.090
一个 ID 为 animalFav 的 div

00:04:07.090 --> 00:04:10.729
我依次选中这些元素

00:04:10.729 --> 00:04:15.094
然后设置属性 innerHTML 的值

00:04:15.094 --> 00:04:19.850
这个属性可以改变显示在页面上的文字

00:04:19.850 --> 00:04:24.785
把数据取出来赋给它们就可以了

00:04:24.785 --> 00:04:30.800
allData 保存了取回的数据

00:04:30.800 --> 00:04:33.090
从中取出

00:04:33.089 --> 00:04:37.489
索引为 0 的元素

00:04:37.490 --> 00:04:39.785
即第一个元素

00:04:39.785 --> 00:04:41.960
将 animal

00:04:41.959 --> 00:04:44.329
赋给 animalName

00:04:44.329 --> 00:04:48.329
然后依次取出 facts 和 fav

00:04:48.339 --> 00:04:52.939
我们还打印出 error 这样出现错误时就知道了

00:04:52.939 --> 00:04:58.473
至此 我们使用了

00:04:58.473 --> 00:05:01.519
fetch 和 promises 动态更新了用户界面

00:05:01.519 --> 00:05:06.539
现在让我们再演示一遍

00:05:08.629 --> 00:05:21.225
输入

00:05:21.225 --> 00:05:28.390
Lions are so pretty in the morning

00:05:30.230 --> 00:05:34.619
I woke up like this

00:05:34.619 --> 00:05:42.965
says the yawning lion

00:05:42.964 --> 00:05:45.054
见证奇迹的时候到了

00:05:45.055 --> 00:05:50.525
我们学习了如何链接 promises 并使用 fetch

00:05:50.524 --> 00:05:57.750
动态更新用户界面

