WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.620
在 Fetch API 中使用 promises 是我最喜欢的

00:00:04.620 --> 00:00:08.490
可以很容易把 promises 链接起来

00:00:08.490 --> 00:00:10.245
定义依赖外部数据的函数时

00:00:10.244 --> 00:00:14.910
不用担心阻塞或抛出异常

00:00:14.910 --> 00:00:20.954
让我们看一下使用 Animal Web API 的例子

00:00:20.954 --> 00:00:24.644
假设我们要添加一个新功能

00:00:24.644 --> 00:00:28.394
允许用户输入喜欢动物的轶闻趣事

00:00:28.394 --> 00:00:30.074
这样我们就需要保存所有信息

00:00:30.074 --> 00:00:33.600
包括从 API 中取回的数据

00:00:33.600 --> 00:00:34.844
动物名字

00:00:34.844 --> 00:00:36.134
和它的基本资料

00:00:36.134 --> 00:00:40.460
还有用户输入的轶闻趣事

00:00:40.460 --> 00:00:45.380
我们需要把所有这些信息保存在应用中 以便后续取用

00:00:45.380 --> 00:00:48.785
因此我们需要调用 fetch 两回

00:00:48.784 --> 00:00:53.484
首先要向 Animal Web API 发起一个 GET 请求

00:00:53.484 --> 00:00:56.240
然后发起 POST 请求

00:00:56.240 --> 00:01:00.295
将数据保存在应用中

00:01:00.295 --> 00:01:03.664
使用异步 promises 做这件事再合适不过了

00:01:03.664 --> 00:01:06.829
Fetch API 用到了 promises

00:01:06.829 --> 00:01:12.814
因此可以使用 then 将几次调用链接起来

00:01:12.814 --> 00:01:17.939
很快我们就能在实战中看到它们是如何工作的

