WEBVTT
Kind: captions
Language: zh-CN

00:00:00.000 --> 00:00:04.559
希望你已经尝试过

00:00:04.559 --> 00:00:10.169
使用 Network 面板来检查网站

00:00:10.169 --> 00:00:13.199
你已经大概了解

00:00:13.199 --> 00:00:16.484
这些网站的资源数量有多么惊人

00:00:16.484 --> 00:00:23.114
我建议你继续使用检查 (Inspect) 工具

00:00:23.114 --> 00:00:27.689
很多时候 当我看到一个很酷的网站

00:00:27.690 --> 00:00:30.900
我都会检查元素 看看有什么

00:00:30.899 --> 00:00:35.189
你可以通过这种方法学到很多前端技能

00:00:35.189 --> 00:00:37.994
所以 勤加使用

00:00:37.994 --> 00:00:42.320
现在你已经大概了解

00:00:42.320 --> 00:00:46.685
一个专业级前端应用需要处理的工作

00:00:46.685 --> 00:00:50.240
接下来 我们将讨论都有哪些构建工具

00:00:50.240 --> 00:00:54.065
以及它们如何简化资源管理

00:00:54.064 --> 00:00:58.369
构建工具是 能帮助开发者自动化处理网站资源文件的工具

00:00:58.369 --> 00:01:02.854
构建工具是 能帮助开发者自动化处理网站资源文件的工具

00:01:02.854 --> 00:01:05.075
节省很多时间和烦恼

00:01:05.075 --> 00:01:07.204
确实如此

00:01:07.204 --> 00:01:13.819
通过这个定义 希望你能了解到所有构建工具的主要功能

00:01:13.819 --> 00:01:15.799
虽然不是全部

00:01:15.799 --> 00:01:19.009
但通常情况下 构建工具都是管理工具

00:01:19.010 --> 00:01:21.425
管理着所有的资源

00:01:21.424 --> 00:01:24.569
我们需要它们 因为如果没有管理工具

00:01:24.569 --> 00:01:27.214
所有资源文件就像放养的猫

00:01:27.215 --> 00:01:30.890
当你试图一个个地管理网站上所有的资源

00:01:30.890 --> 00:01:34.430
将其全部放到 head 标签里 会忙到人仰马翻

00:01:34.430 --> 00:01:39.260
而且 随着管理的数量越大 困难程度也越高

00:01:39.260 --> 00:01:44.210
因此 为了不被逼疯

00:01:44.209 --> 00:01:46.729
我们有很多这样的工具

00:01:46.730 --> 00:01:53.615
在这个领域中 一些常见的工具有 Grunt 和 Gulp

00:01:53.614 --> 00:01:58.134
Brunch、Webpack、Bower 等等

00:01:58.135 --> 00:02:00.859
工具太多了 我认为这有时候也是

00:02:00.859 --> 00:02:06.635
入门开发人员使用构建工具时的障碍

00:02:06.635 --> 00:02:09.349
这些工具各自的用处有些抽象

00:02:09.349 --> 00:02:13.864
工具种类太多了 不知道从哪里入手

00:02:13.865 --> 00:02:17.469
大致地讲一下

00:02:17.469 --> 00:02:23.444
NPM 脚本是管理网站资源的最简单的工具之一

00:02:23.444 --> 00:02:28.219
就是那些放入 package.json 文件中的普通 NPM 脚本

00:02:28.219 --> 00:02:30.680
这些脚本用处也很大

00:02:30.680 --> 00:02:33.659
此外 还可以使用 Grunt 和 Gulp

00:02:33.659 --> 00:02:38.875
这些可能是除 Webpack 之外出镜率最高的工具了

00:02:38.875 --> 00:02:43.245
你可以使用 Grunt 和 Gulp 来编写简单工具

00:02:43.245 --> 00:02:49.580
通过编写一些简单的规则 就可以用特定方式管理所有资源

00:02:49.580 --> 00:02:51.920
而且很容易设置

00:02:51.919 --> 00:02:56.584
Webpack 可能是目前最常见的构建工具

00:02:56.585 --> 00:03:00.740
随着 React、Vue 以及一些其他基于 JavaScript 前端项目的兴起而声名远播

00:03:00.740 --> 00:03:04.165
随着 React、Vue 以及一些其他基于 JavaScript 前端项目的兴起而声名远播

00:03:04.164 --> 00:03:06.919
Webpack 确实非常好用

00:03:06.919 --> 00:03:08.750
它本身是基于 JavaScript 的

00:03:08.750 --> 00:03:14.180
因此 当你使用 JavaScript 开发前端时

00:03:14.180 --> 00:03:16.075
很有可能会看到它

00:03:16.074 --> 00:03:22.280
事实上 在 React 构建工具 Create React App 中使用的就是 Webpack

00:03:22.280 --> 00:03:26.240
所以你可能在不知情的情况下已经使用过了

00:03:26.240 --> 00:03:31.365
那么 Webpack 与其他构建工具有何不同?

00:03:31.365 --> 00:03:34.250
Webpack 正成为无所不在的构建工具

00:03:34.250 --> 00:03:37.699
在较为现代的框架中随处可见

00:03:37.699 --> 00:03:41.125
因此 如果你还没见过的话 可能以后会经常见到了

00:03:41.125 --> 00:03:44.000
Grunt 和 Gulp 稍微简单些

00:03:44.000 --> 00:03:47.240
仍然可以在工具里写规则

00:03:47.240 --> 00:03:50.689
但是功能不如 Webpack 全面

00:03:50.689 --> 00:03:52.859
如果一个项目很简单

00:03:52.860 --> 00:03:56.090
你可能不需要用到 Webpack 的全部功能

00:03:56.090 --> 00:03:57.979
可以记住这一点

00:03:57.979 --> 00:04:03.534
本课程选择使用 Webpack 的部分原因是

00:04:03.534 --> 00:04:06.875
它在前端开发领域越来越受欢迎

00:04:06.875 --> 00:04:12.004
无论如何 了解 Webpack 都是有好处的

00:04:12.004 --> 00:04:14.465
它确实更加复杂

00:04:14.465 --> 00:04:18.064
因此 如果你从一开始就学习 Webpack

00:04:18.064 --> 00:04:19.920
再回头学习 Grunt 和 Gulp 时

00:04:19.920 --> 00:04:21.545
就会觉得很简单了

00:04:21.545 --> 00:04:26.085
希望牢记这两件事

00:04:26.084 --> 00:04:29.019
学习 Webpack 会比较容易

