WEBVTT
Kind: captions
Language: en

00:00:01.820 --> 00:00:05.280
So we're back to our blog.

00:00:05.280 --> 00:00:10.109
Here what we want to do is in the content section,

00:00:10.109 --> 00:00:14.625
I think it'd be fun to make a photo gallery,

00:00:14.625 --> 00:00:18.420
and CSS grid is set up perfectly to do such a thing.

00:00:18.420 --> 00:00:22.110
Because as you can see I've already got set up my two by

00:00:22.109 --> 00:00:27.134
two grid which can easily become a photo gallery.

00:00:27.135 --> 00:00:31.965
So let's look to see how I nested this grid inside of our larger grid.

00:00:31.964 --> 00:00:34.920
We have one grid which has our header,

00:00:34.920 --> 00:00:36.585
blog post, content, footer.

00:00:36.585 --> 00:00:40.245
Then in the content we have a second nested grid.

00:00:40.244 --> 00:00:44.009
Here's what this looks like in the HTML.

00:00:44.009 --> 00:00:50.524
Inside of content I have the div with the id nested grid.

00:00:50.524 --> 00:00:52.625
Then inside of nested grid,

00:00:52.625 --> 00:00:56.329
I've placed four elements each has their own id,

00:00:56.329 --> 00:00:58.975
and shares the class, "photoBox".

00:00:58.975 --> 00:01:00.624
Up here in "style",

00:01:00.624 --> 00:01:05.015
we can see I've set up the nested grid to be display grid,

00:01:05.015 --> 00:01:08.439
and then I've just broken up the available space, the columns,

00:01:08.439 --> 00:01:13.700
and rows by 50 percent which is what gives us a four area grid.

00:01:13.700 --> 00:01:20.870
Right now I'm choosing to explicitly set the size of each square using width and height.

00:01:20.870 --> 00:01:24.290
But say for example,

00:01:24.290 --> 00:01:27.415
you want something a little wider,

00:01:27.415 --> 00:01:29.820
the grid will adjust.

00:01:29.819 --> 00:01:37.794
So we see that the div with the id "one" will be our top left box.

00:01:37.795 --> 00:01:40.960
So let's try to put a picture in there.

00:01:40.959 --> 00:01:46.744
We would say, "one, background-image: URL."

00:01:46.745 --> 00:01:50.600
This is the path that I believe our picture is in,

00:01:52.709 --> 00:01:57.959
"images/waterfall.jpg" So we see it's the coming in there.

00:01:57.959 --> 00:02:03.750
But I want it to size itself differently, so we'll say,

00:02:03.750 --> 00:02:06.900
"background-size", let's try, "cover"

00:02:06.900 --> 00:02:11.300
it's a little better but not totally what I'm looking for.

00:02:11.300 --> 00:02:15.800
"Contain", I like that enough to leave it for now.

00:02:15.800 --> 00:02:22.520
So let's go ahead and try to add a second image to our gallery by saying,

00:02:22.520 --> 00:02:28.020
"two" and I'll just copy and paste for quickness here.

00:02:28.090 --> 00:02:32.705
Let's see I think there's one called, "still-water".

00:02:32.705 --> 00:02:35.030
So this is a naming thing.

00:02:35.030 --> 00:02:38.750
You can see here what I really want is still-water.

00:02:38.750 --> 00:02:42.110
So now we have a little grid coming together.

00:02:42.110 --> 00:02:47.810
Let's go ahead and do the same for three and four,

00:02:48.479 --> 00:02:52.884
which are going to be light and night.

00:02:52.884 --> 00:02:58.060
So here what I'm doing is I'm just changing the path so that it's a different picture.

00:02:58.060 --> 00:03:07.819
So I want this to be my picture which has the path light.jpg and this to be night.jpg.

00:03:07.819 --> 00:03:10.394
Now, when we refresh,

00:03:10.395 --> 00:03:12.960
we see we have our grid.

00:03:12.960 --> 00:03:14.980
Now, there's a couple of things here.

00:03:14.979 --> 00:03:19.209
One is I really want some more room between these.

00:03:19.210 --> 00:03:22.689
So if you remember we can come up to our nested grid and we can

00:03:22.689 --> 00:03:26.439
use "grid-gap" to give a little space.

00:03:26.439 --> 00:03:32.030
Now that I look at it I'm interested to see what would happen if we split it up a

00:03:32.030 --> 00:03:39.335
little differently like what would it mean to do 70-30 columns, not great.

00:03:39.335 --> 00:03:44.855
So here you can see we have nested our CSS grids.

00:03:44.854 --> 00:03:49.579
We have our main grid which is setting up the layout of the entire page.

00:03:49.580 --> 00:03:53.630
Then within one of the sections here the content section,

00:03:53.629 --> 00:03:58.509
we've created a second grid which is holding these four images.

00:03:58.509 --> 00:04:01.969
In our HTML, we could see it literally it's

00:04:01.969 --> 00:04:05.120
just nesting these elements inside of each other.

00:04:05.120 --> 00:04:08.360
The top element is the, "container".

00:04:08.360 --> 00:04:12.580
Everything that's inside of here is the main grid.

00:04:12.580 --> 00:04:14.355
We see our header,

00:04:14.354 --> 00:04:18.810
blog posts, content, footer.

00:04:18.810 --> 00:04:22.089
Now if we go into content,

00:04:22.089 --> 00:04:25.564
we see that we have our nested grid,

00:04:25.564 --> 00:04:30.980
and inside our nested grid we have the four elements that make it up.

00:04:30.980 --> 00:04:35.600
Now within the grid itself remember you could do everything in a nested grid,

00:04:35.600 --> 00:04:37.085
you could do an irregular grid.

00:04:37.084 --> 00:04:46.139
So if I switched the order you'll see the picture switch order.

00:04:46.139 --> 00:04:49.610
If I wanted to bring them back in closer together,

00:04:49.610 --> 00:04:52.134
we can simply go to the nested grid,

00:04:52.134 --> 00:04:55.235
"grid-gap" and make it less.

00:04:55.235 --> 00:04:58.910
Now we have them nice and compact in.

00:04:58.910 --> 00:05:06.840
This is an example of using nested grids in CSS to create elegant blog page layouts.

