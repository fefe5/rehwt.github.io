WEBVTT
Kind: captions
Language: zh-CN

00:00:01.199 --> 00:00:05.290
我们已经知道了如何设置不同的媒体查询断点

00:00:05.290 --> 00:00:08.980
来针对小屏幕和大屏幕创建不同的布局样式

00:00:08.980 --> 00:00:13.554
但是在一些情况下 我们可能需要 3 种不同的布局方式

00:00:13.554 --> 00:00:18.100
一个简单的例子是创建 2 个不同的断点

00:00:18.100 --> 00:00:22.359
比如 X 是我们的第一套 CSS 样式

00:00:22.359 --> 00:00:25.199
X 样式放置在最开始

00:00:25.199 --> 00:00:28.664
针对 0 到 900 像素的情况

00:00:28.664 --> 00:00:31.109
然后我们在 900 设置一个断点

00:00:31.109 --> 00:00:36.829
样式 Y 用于 900 到 1150 像素之间情况

00:00:36.829 --> 00:00:41.409
然后所有大于 1150 像素的情况则叫做样式 Z

00:00:41.409 --> 00:00:43.294
也拥有一套独立的样式

00:00:43.295 --> 00:00:47.450
你可以添加任意数量的断点 只要你喜欢

00:00:47.450 --> 00:00:49.265
但是它们可能很快会产生冲突

00:00:49.265 --> 00:00:52.399
所以我们还是先试着从 2 个断点开始

00:00:52.399 --> 00:00:55.070
回到我们的代码中

00:00:55.070 --> 00:00:59.030
我们采用了移动端优先的方式

00:00:59.030 --> 00:01:01.715
在 grid-template-areas 中

00:01:01.715 --> 00:01:07.204
我们想要在小屏幕情况下内容尽可能的宽一些

00:01:07.204 --> 00:01:08.420
所以这里

00:01:08.420 --> 00:01:12.484
我们给所有的内容都设置成了一列的方式

00:01:12.484 --> 00:01:15.560
然后在下面

00:01:15.560 --> 00:01:21.079
我们针对中型屏幕设置了对应的媒体查询样式

00:01:21.079 --> 00:01:23.314
这里的中型屏幕是指

00:01:23.314 --> 00:01:29.155
介于 600 像素

00:01:29.155 --> 00:01:33.739
到 1100 像素之间宽度的屏幕

00:01:33.739 --> 00:01:36.199
max-width 和 min-width 的工作方式一样

00:01:36.200 --> 00:01:37.790
用于设置断点的边界

00:01:37.790 --> 00:01:39.859
所以这里的意思是

00:01:39.859 --> 00:01:45.959
最小宽度为 601 像素

00:01:45.959 --> 00:01:49.099
最大宽度不超过 1100 像素

00:01:49.099 --> 00:01:52.849
所有在这个范围内的屏幕

00:01:52.849 --> 00:01:57.574
都会采用这个 grid-template-areas 的样式 同时会有一个海蓝色的边框

00:01:57.575 --> 00:02:00.545
我们来看看变化情况

00:02:00.545 --> 00:02:01.969
在浏览器中

00:02:01.969 --> 00:02:06.004
因为是在小屏幕上 我们可以看到所有内容呈一列排序

00:02:06.004 --> 00:02:09.109
而一旦我们将屏幕拉到 600 像素后

00:02:09.110 --> 00:02:13.850
你可以看到它显示出了 2 列结构

00:02:13.849 --> 00:02:18.064
这种样式会一直应用到 1100 像素为止

00:02:18.064 --> 00:02:22.414
但是现在 我们也设置了针对大屏幕的额外样式

00:02:22.414 --> 00:02:26.949
这种情况下我们的 siderbar 会占有更多的空间

00:02:26.949 --> 00:02:30.864
在 600 到 1100 像素之间

00:02:30.865 --> 00:02:33.545
sidebar 只占据了 2 列的空间

00:02:33.544 --> 00:02:35.394
而在大屏幕情况下

00:02:35.395 --> 00:02:39.515
我们希望 sidebar 占据 4 列空间

00:02:39.514 --> 00:02:43.519
如果我们继续拖动屏幕的话

00:02:44.229 --> 00:02:47.399
看见了没？

00:02:49.370 --> 00:02:56.270
这里我们可以看到有 3 行布局

00:02:56.270 --> 00:03:00.740
在中间的一行中会有 2 列  blog post 占据了很多的空间

00:03:00.740 --> 00:03:03.420
可能稍微有点过于大了

00:03:03.590 --> 00:03:07.064
随着你缩小屏幕

00:03:07.064 --> 00:03:09.875
右边的区域会重新占据更多的空间

00:03:09.875 --> 00:03:12.780
随着屏幕继续变得更小

00:03:13.479 --> 00:03:16.804
你可以看见它们都回到了一列的情况

00:03:16.805 --> 00:03:20.270
好了 这就是如何在 CSS grid 中

00:03:20.270 --> 00:03:24.510
使用多个媒体查询断点的例子了

